import requests
import re
import time
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters

# –í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_BOT_TOKEN = "8095985098:AAG0DtGHnzq5wXuwo2YlsdpflRvNHuG6glU"
TELEGRAM_CHAT_ID = "388895285"
API_URL = "https://api.skinport.com/v1/items?app_id=730&currency=EUR"

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã (–≤ –µ–≤—Ä–æ)
ITEMS_PRICE_LIMITS = {
    "Sport Gloves | Bronze Morph": 150,
    "Talon Knife": 300,
    "AWP | Asiimov (Battle-Scarred)": 75,
    "Skeleton Knife": 190
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
async def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {"chat_id": TELEGRAM_CHAT_ID, "text": message}
    try:
        response = requests.post(url, data=payload)
        if response.status_code != 200:
            print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", response.text)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ Telegram:", e)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
async def check_items():
    try:
        headers = {
            "Accept-Encoding": "br",
            "User-Agent": "Mozilla/5.0"
        }
        response = requests.get(API_URL, headers=headers)
        print(f"Status Code: {response.status_code}")

        if response.status_code != 200:
            error_text = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Skinport: {response.status_code}\n{response.text}"
            print(error_text)
            await send_telegram_message(error_text)
            return

        try:
            items = response.json()
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON:", e)
            await send_telegram_message(f"‚ùóÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON: {e}")
            return

        print(f"–ü–æ–ª—É—á–µ–Ω–æ {len(items)} —Ç–æ–≤–∞—Ä–æ–≤")

        matches_found = 0

        for item in items:
            market_name = item.get("market_hash_name", "")
            price = item.get("min_price", None)
            item_url = item.get("item_page", "")

            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞: {market_name}, –¶–µ–Ω–∞: {price}, –°—Å—ã–ª–∫–∞: {item_url}")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω—É–∂–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
            if "Sport Gloves | Bronze Morph" in market_name:
                if price is not None and price <= ITEMS_PRICE_LIMITS["Sport Gloves | Bronze Morph"]:
                    message = f"üîî –ù–∞–π–¥–µ–Ω—ã –ø–µ—Ä—á–∞—Ç–∫–∏:\n{market_name}\nüí∂ –¶–µ–Ω–∞: {price} EUR\nüîó {item_url}"
                    print(message)
                    await send_telegram_message(message)
                    matches_found += 1

            if "Talon Knife" in market_name:
                if price is not None and price <= ITEMS_PRICE_LIMITS["Talon Knife"]:
                    message = f"üîî –ù–∞–π–¥–µ–Ω –Ω–æ–∂ Talon:\n{market_name}\nüí∂ –¶–µ–Ω–∞: {price} EUR\nüîó {item_url}"
                    print(message)
                    await send_telegram_message(message)
                    matches_found += 1

            if "Skeleton Knife" in market_name:
                if price is not None and price <= ITEMS_PRICE_LIMITS["Skeleton Knife"]:
                    message = f"üîî –ù–∞–π–¥–µ–Ω –Ω–æ–∂ Skeleton:\n{market_name}\nüí∂ –¶–µ–Ω–∞: {price} EUR\nüîó {item_url}"
                    print(message)
                    await send_telegram_message(message)
                    matches_found += 1

        if matches_found == 0:
            print("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            await send_telegram_message("‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤.")

    except Exception as e:
        error_msg = f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞: {e}"
        print(error_msg)
        await send_telegram_message(error_msg)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context):
    await update.message.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ —Ü–µ–Ω—É –¥–ª—è –ø–æ–∏—Å–∫–∞.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async def handle_message(update: Update, context):
    user_message = update.message.text
    if user_message:
        try:
            # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏ —Ü–µ–Ω—É
            name_price = user_message.split(",")
            if len(name_price) == 2:
                item_name = name_price[0].strip()
                item_price = float(name_price[1].strip())
                ITEMS_PRICE_LIMITS[item_name] = item_price
                await update.message.reply(f"–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –∏—Å–∫–∞—Ç—å {item_name} –¥–æ {item_price} –µ–≤—Ä–æ.")
            else:
                await update.message.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É –ø—Ä–µ–¥–º–µ—Ç–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.")
        except Exception as e:
            await update.message.reply(f"–û—à–∏–±–∫–∞: {e}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ Application
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    await application.run_polling()

# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
