from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
import time
import requests

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_BOT_TOKEN = "8095985098:AAG0DtGHnzq5wXuwo2YlsdpflRvNHuG6glU"
TELEGRAM_CHAT_ID = "388895285"
API_URL = "https://skinport.com/ru/market?cat=Rifle&item=Asiimov&type=AWP&exterior=1&sort=price&order=asc"

# üß≤ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã (–≤ –µ–≤—Ä–æ)
ITEMS_PRICE_LIMITS = {
    "Sport Gloves | Bronze Morph": 150,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è —ç—Ç–∏—Ö –ø–µ—Ä—á–∞—Ç–æ–∫
    "Talon Knife": 300,  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –Ω–æ–∂–µ–π
    "AWP | Asiimov (Battle-Scarred)": 75  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è AWP Asiimov (Battle-Scarred)
}

def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {"chat_id": TELEGRAM_CHAT_ID, "text": message}
    try:
        response = requests.post(url, data=payload)
        if response.status_code != 200:
            print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", response.text)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ Telegram:", e)

def check_items():
    try:
        # –ù–∞—Å—Ç—Ä–æ–∏–º Selenium WebDriver
        driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
        driver.get(API_URL)
        time.sleep(5)  # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

        # –ü–æ–ª—É—á–∏–º HTML –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
        html = driver.page_source

        # –¢–µ–ø–µ—Ä—å –ø–∞—Ä—Å–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π HTML
        soup = BeautifulSoup(html, 'html.parser')
        items = soup.find_all("div", class_="item-card")

        print(f"–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(items)}")

        found = False
        for item in items:
            market_name = item.find("span", class_="item-title").text.strip()  # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
            price = item.find("span", class_="item-price").text.strip().replace("‚Ç¨", "").strip()  # –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞
            price = float(price) if price else 0
            item_url = "https://skinport.com" + item.find("a", class_="item-card-link")["href"]  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä

            # –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            print(f"–¢–æ–≤–∞—Ä: {market_name}, –¶–µ–Ω–∞: {price}, –°—Å—ã–ª–∫–∞: {item_url}")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è "Sport Gloves | Bronze Morph"
            if price is not None:
                if re.search(r"Sport Gloves\s*\|\s*Bronze Morph", market_name) and price <= ITEMS_PRICE_LIMITS["Sport Gloves | Bronze Morph"]:
                    message = f"üîî –ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥–º–µ—Ç:\n{market_name}\nüí∂ –¶–µ–Ω–∞: {price} EUR\nüîó {item_url}"
                    print(f"–ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä: {message}")
                    send_telegram_message(message)
                    found = True

                # –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–∂–µ–π Talon Knife
                elif "talon knife" in market_name.lower() and price <= ITEMS_PRICE_LIMITS["Talon Knife"]:
                    message = f"üîî –ù–∞–π–¥–µ–Ω –Ω–æ–∂:\n{market_name}\nüí∂ –¶–µ–Ω–∞: {price} EUR\nüîó {item_url}"
                    print(f"–ù–∞–π–¥–µ–Ω –Ω–æ–∂: {message}")
                    send_telegram_message(message)
                    found = True

                # –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ AWP Asiimov (Battle-Scarred)
                if re.search(r"AWP\s*\|\s*Asiimov", market_name, re.IGNORECASE) and "Battle-Scarred" in market_name:
                    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ AWP Asiimov: {market_name} —Å —Ü–µ–Ω–æ–π {price} –µ–≤—Ä–æ")
                    if price <= ITEMS_PRICE_LIMITS["AWP | Asiimov (Battle-Scarred)"]:
                        message = f"üîî –ù–∞–π–¥–µ–Ω AWP Asiimov (Battle-Scarred):\n{market_name}\nüí∂ –¶–µ–Ω–∞: {price} EUR\nüîó {item_url}"
                        print(f"–ù–∞–π–¥–µ–Ω AWP Asiimov: {message}")
                        send_telegram_message(message)
                        found = True

        if not found:
            print("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            send_telegram_message("‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤.")

        driver.quit()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

    except Exception as e:
        error_msg = f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞: {e}"
        print(error_msg)
        send_telegram_message(error_msg)

# üîÅ –ó–∞–ø—É—Å–∫ –≤ —Ü–∏–∫–ª–µ
while True:
    check_items()
    time.sleep(120)  # –ü–∞—É–∑–∞ 2 –º–∏–Ω—É—Ç—ã
