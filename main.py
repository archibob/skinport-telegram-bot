import requests
import time
import re
import json
import os

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_BOT_TOKEN = "8095985098:AAG0DtGHnzq5wXuwo2YlsdpflRvNHuG6glU"
TELEGRAM_CHAT_ID = "388895285"
API_URL = "https://api.skinport.com/v1/items?app_id=730&currency=EUR"

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–≤–∞—Ä–∞—Ö
ITEMS_FILE = "items.json"

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
def load_items():
    if os.path.exists(ITEMS_FILE):
        with open(ITEMS_FILE, 'r') as file:
            return json.load(file)
    return {}

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ñ–∞–π–ª
def save_items(items):
    with open(ITEMS_FILE, 'w') as file:
        json.dump(items, file)

# üîß –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
ITEMS_PRICE_LIMITS = load_items()

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {"chat_id": TELEGRAM_CHAT_ID, "text": message}
    try:
        response = requests.post(url, data=payload)
        if response.status_code != 200:
            print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", response.text)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ Telegram:", e)

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥
def handle_command(command):
    global ITEMS_PRICE_LIMITS
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    match = re.match(r"^add (\S.+) (\d+)$", command)
    if match:
        item_name = match.group(1)
        price_limit = int(match.group(2))
        ITEMS_PRICE_LIMITS[item_name] = price_limit
        save_items(ITEMS_PRICE_LIMITS)
        return f"‚úÖ –¢–æ–≤–∞—Ä '{item_name}' –¥–æ–±–∞–≤–ª–µ–Ω —Å —Ü–µ–Ω–æ–π {price_limit} EUR."

    # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    match = re.match(r"^remove (\S.+)$", command)
    if match:
        item_name = match.group(1)
        if item_name in ITEMS_PRICE_LIMITS:
            del ITEMS_PRICE_LIMITS[item_name]
            save_items(ITEMS_PRICE_LIMITS)
            return f"‚úÖ –¢–æ–≤–∞—Ä '{item_name}' —É–¥–∞–ª–µ–Ω."
        else:
            return f"‚ùå –¢–æ–≤–∞—Ä '{item_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω."

    return "‚ùóÔ∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞."

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–æ–≤
def check_items():
    try:
        headers = {
            "Accept-Encoding": "br",
            "User-Agent": "Mozilla/5.0"
        }
        
        response = requests.get(API_URL, headers=headers)
        if response.status_code != 200:
            send_telegram_message(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Skinport: {response.status_code}")
            return

        try:
            items = response.json()
        except Exception as e:
            send_telegram_message(f"‚ùóÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON: {e}")
            return

        print(f"–ü–æ–ª—É—á–µ–Ω–æ {len(items)} —Ç–æ–≤–∞—Ä–æ–≤")

        matches_found = 0

        for item in items:
            market_name = item.get("market_hash_name", "")
            price = item.get("min_price", None)
            item_url = item.get("item_page", "")

            print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞: {market_name}, –¶–µ–Ω–∞: {price}, –°—Å—ã–ª–∫–∞: {item_url}")

            for item_name, price_limit in ITEMS_PRICE_LIMITS.items():
                if re.search(re.escape(item_name), market_name, re.IGNORECASE):
                    print(f"–ù–∞–π–¥–µ–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è —Ç–æ–≤–∞—Ä–∞: {market_name}")
                    if price is not None and price <= price_limit:
                        message = f"üîî –ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä:\n{market_name}\nüí∂ –¶–µ–Ω–∞: {price} EUR\nüîó {item_url}"
                        print(message)
                        send_telegram_message(message)
                        matches_found += 1

        if matches_found == 0:
            send_telegram_message("‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤.")

    except Exception as e:
        error_msg = f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞: {e}"
        print(error_msg)
        send_telegram_message(error_msg)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram
def start_bot():
    last_update_id = None
    while True:
        try:
            url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/getUpdates?offset={last_update_id}"
            response = requests.get(url)
            updates = response.json().get("result", [])

            for update in updates:
                last_update_id = update["update_id"] + 1
                message = update["message"].get("text", "")
                if message:
                    print(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: {message}")
                    response_message = handle_command(message)
                    send_telegram_message(response_message)

        except Exception as e:
            print("–û—à–∏–±–∫–∞ –±–æ—Ç–∞:", e)
        
        time.sleep(5)

# üîÅ –ó–∞–ø—É—Å–∫ –≤ —Ü–∏–∫–ª–µ
while True:
    check_items()
    time.sleep(120)  # –ü–∞—É–∑–∞ 2 –º–∏–Ω—É—Ç—ã
    start_bot()  # –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞
