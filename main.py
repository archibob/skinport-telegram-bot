import requests
import time

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_BOT_TOKEN = "8095985098:AAG0DtGHnzq5wXuwo2YlsdpflRvNHuG6glU"
TELEGRAM_CHAT_ID = "388895285"
API_URL = "https://api.skinport.com/v1/items?app_id=730&currency=EUR"

# –•—Ä–∞–Ω–∏–º ID —É–∂–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
found_items = set()

def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {"chat_id": TELEGRAM_CHAT_ID, "text": message}
    try:
        response = requests.post(url, data=payload)
        if response.status_code != 200:
            print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", response.text)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ Telegram:", e)

def check_items():
    try:
        headers = {"Accept-Encoding": "br"}
        response = requests.get(API_URL, headers=headers)
        print(f"Status Code: {response.status_code}")

        if response.status_code != 200:
            error_text = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Skinport: {response.status_code}\n{response.text}"
            print(error_text)
            send_telegram_message(error_text)
            return

        try:
            items = response.json()
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON:", e)
            send_telegram_message(f"‚ùóÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ JSON: {e}")
            return

        print(f"–ü–æ–ª—É—á–µ–Ω–æ {len(items)} —Ç–æ–≤–∞—Ä–æ–≤")

        found = False
        for item in items:
            market_name = item.get("market_hash_name", "")
            price = item.get("min_price", None)
            item_id = item.get("id", None)

            # –£–¥–∞–ª—è–µ–º —Å–∏–º–≤–æ–ª "‚òÖ", –µ—Å–ª–∏ –µ—Å—Ç—å
            clean_name = market_name.replace("‚òÖ", "").strip()

            # üîé –û—Ç–ª–∞–¥–∫–∞ ‚Äî –ª–æ–≥–∏—Ä—É–µ–º –≤—Å—ë, —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å Talon Knife
            if "Talon Knife" in clean_name:
                print(f"üîé –û–±–Ω–∞—Ä—É–∂–µ–Ω Talon Knife: {clean_name} ‚Äî {price} EUR")

            print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä: {clean_name}")
            print(f"–¶–µ–Ω–∞: {price} EUR")

            if price is not None:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ Talon Knife < 300 EUR
                if "Talon Knife" in clean_name and price <= 30000 and item_id not in found_items:
                    message = f"üîî –ù–∞–π–¥–µ–Ω Talon Knife:\n{market_name}\nüí∂ –¶–µ–Ω–∞: {price} EUR"
                    print(message)
                    send_telegram_message(message)
                    found_items.add(item_id)
                    found = True
                    continue

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ Sport Gloves | Bronze Morph < 150 EUR
                if "Sport Gloves | Bronze Morph" in clean_name and price <= 15000 and item_id not in found_items:
                    message = f"üîî –ù–∞–π–¥–µ–Ω—ã –ø–µ—Ä—á–∞—Ç–∫–∏:\n{market_name}\nüí∂ –¶–µ–Ω–∞: {price} EUR"
                    print(message)
                    send_telegram_message(message)
                    found_items.add(item_id)
                    found = True

        if not found:
            print("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            send_telegram_message("‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤.")

    except Exception as e:
        error_msg = f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞: {e}"
        print(error_msg)
        send_telegram_message(error_msg)

# üîÅ –ó–∞–ø—É—Å–∫ –≤ —Ü–∏–∫–ª–µ
while True:
    check_items()
    time.sleep(60)
